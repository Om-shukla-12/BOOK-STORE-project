{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OM\\\\OneDrive\\\\Desktop\\\\BOOK STORE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_ENDPOINTS, getAuthHeader } from '../config';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios defaults\n  axios.defaults.withCredentials = true;\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const response = await axios.get(API_ENDPOINTS.AUTH.USER, {\n        headers: getAuthHeader()\n      });\n      setUser(response.data);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post(API_ENDPOINTS.AUTH.LOGIN, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token in localStorage as backup\n      if (token) {\n        localStorage.setItem('token', token);\n      }\n      setUser(user);\n      return user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await axios.post(API_ENDPOINTS.AUTH.REGISTER, userData, {\n        withCredentials: true\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token in localStorage as backup\n      if (token) {\n        localStorage.setItem('token', token);\n      }\n      setUser(user);\n      return user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(API_ENDPOINTS.AUTH.LOGOUT, {}, {\n        withCredentials: true\n      });\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await axios.put(API_ENDPOINTS.AUTH.USER, userData, {\n        headers: getAuthHeader(),\n        withCredentials: true\n      });\n      setUser(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profile update failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Authenticating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      onRetry: checkAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","API_ENDPOINTS","getAuthHeader","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","defaults","withCredentials","checkAuth","response","get","AUTH","USER","headers","data","err","console","localStorage","removeItem","login","email","password","post","LOGIN","token","setItem","_err$response","_err$response$data","errorMessage","message","register","userData","REGISTER","_err$response2","_err$response2$data","logout","LOGOUT","updateProfile","put","_err$response3","_err$response3$data","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","onRetry","Provider","_c","$RefreshReg$"],"sources":["C:/Users/OM/OneDrive/Desktop/BOOK STORE/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_ENDPOINTS, getAuthHeader } from '../config';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Configure axios defaults\r\n  axios.defaults.withCredentials = true;\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const response = await axios.get(API_ENDPOINTS.AUTH.USER, {\r\n        headers: getAuthHeader()\r\n      });\r\n      setUser(response.data);\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post(API_ENDPOINTS.AUTH.LOGIN, \r\n        { email, password },\r\n        { withCredentials: true }\r\n      );\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token in localStorage as backup\r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n      }\r\n      \r\n      setUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Login failed';\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post(API_ENDPOINTS.AUTH.REGISTER, \r\n        userData,\r\n        { withCredentials: true }\r\n      );\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token in localStorage as backup\r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n      }\r\n      \r\n      setUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Registration failed';\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(API_ENDPOINTS.AUTH.LOGOUT, {}, { withCredentials: true });\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await axios.put(API_ENDPOINTS.AUTH.USER, userData, {\r\n        headers: getAuthHeader(),\r\n        withCredentials: true\r\n      });\r\n      setUser(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Profile update failed';\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Authenticating...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage message={error} onRetry={checkAuth} />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}