{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OM\\\\OneDrive\\\\Desktop\\\\BOOK STORE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport useApi from '../hooks/useApi';\nimport config from '../config';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const {\n    loading,\n    error,\n    apiCall\n  } = useApi();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(config.AUTH_TOKEN_KEY);\n      if (token) {\n        const userData = await apiCall('get', '/auth/me');\n        setUser(userData);\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      localStorage.removeItem(config.AUTH_TOKEN_KEY);\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const login = async (email, password) => {\n    const response = await apiCall('post', '/auth/login', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response;\n    localStorage.setItem(config.AUTH_TOKEN_KEY, token);\n    setUser(user);\n    setIsAuthenticated(true);\n    return user;\n  };\n  const register = async userData => {\n    const response = await apiCall('post', '/auth/register', userData);\n    const {\n      token,\n      user\n    } = response;\n    localStorage.setItem(config.AUTH_TOKEN_KEY, token);\n    setUser(user);\n    setIsAuthenticated(true);\n    return user;\n  };\n  const logout = () => {\n    localStorage.removeItem(config.AUTH_TOKEN_KEY);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const updateProfile = async userData => {\n    const updatedUser = await apiCall('put', '/auth/profile', userData);\n    setUser(updatedUser);\n    return updatedUser;\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Authenticating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      onRetry: checkAuthStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"3OJleHHxzKmDFkGHmw4ltCH4gOY=\", false, function () {\n  return [useApi];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useApi","config","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","error","apiCall","checkAuthStatus","token","localStorage","getItem","AUTH_TOKEN_KEY","userData","removeItem","login","email","password","response","setItem","register","logout","updateProfile","updatedUser","value","message","fileName","_jsxFileName","lineNumber","columnNumber","onRetry","Provider","_c","$RefreshReg$"],"sources":["C:/Users/OM/OneDrive/Desktop/BOOK STORE/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport useApi from '../hooks/useApi';\r\nimport config from '../config';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const { loading, error, apiCall } = useApi();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem(config.AUTH_TOKEN_KEY);\r\n      if (token) {\r\n        const userData = await apiCall('get', '/auth/me');\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem(config.AUTH_TOKEN_KEY);\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    const response = await apiCall('post', '/auth/login', { email, password });\r\n    const { token, user } = response;\r\n    localStorage.setItem(config.AUTH_TOKEN_KEY, token);\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n    return user;\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    const response = await apiCall('post', '/auth/register', userData);\r\n    const { token, user } = response;\r\n    localStorage.setItem(config.AUTH_TOKEN_KEY, token);\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n    return user;\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(config.AUTH_TOKEN_KEY);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    const updatedUser = await apiCall('put', '/auth/profile', userData);\r\n    setUser(updatedUser);\r\n    return updatedUser;\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Authenticating...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage message={error} onRetry={checkAuthStatus} />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}