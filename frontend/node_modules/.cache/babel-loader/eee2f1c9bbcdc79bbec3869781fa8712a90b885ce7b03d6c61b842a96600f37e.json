{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OM\\\\OneDrive\\\\Desktop\\\\BOOK STORE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_ENDPOINTS } from '../config';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios defaults\n  axios.defaults.withCredentials = true;\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(API_ENDPOINTS.AUTH.USER, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Auth check error:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.AUTH.LOGIN, {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token in localStorage as backup\n      localStorage.setItem('token', token);\n\n      // Set user data\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.AUTH.REGISTER, {\n        name,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token in localStorage as backup\n      localStorage.setItem('token', token);\n\n      // Set user data\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(API_ENDPOINTS.AUTH.LOGOUT);\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear local storage and state regardless of server response\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No authentication token');\n      }\n      const response = await axios.put(API_ENDPOINTS.AUTH.USER, userData, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setUser(response.data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Update profile error:', error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update profile'\n      };\n    }\n  };\n  const value = {\n    user,\n    setUser,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Authenticating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      onRetry: checkAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","API_ENDPOINTS","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","defaults","withCredentials","checkAuth","token","localStorage","getItem","response","get","AUTH","USER","headers","data","console","removeItem","login","email","password","post","LOGIN","setItem","success","_error$response","_error$response$data","message","register","name","REGISTER","_error$response2","_error$response2$data","logout","LOGOUT","updateProfile","userData","Error","put","_error$response3","_error$response3$data","value","fileName","_jsxFileName","lineNumber","columnNumber","onRetry","Provider","_c","$RefreshReg$"],"sources":["C:/Users/OM/OneDrive/Desktop/BOOK STORE/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_ENDPOINTS } from '../config';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Configure axios defaults\r\n  axios.defaults.withCredentials = true;\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get(API_ENDPOINTS.AUTH.USER, {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n\r\n      setUser(response.data);\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.AUTH.LOGIN, {\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token in localStorage as backup\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Set user data\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.AUTH.REGISTER, {\r\n        name,\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token in localStorage as backup\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Set user data\r\n      setUser(user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(API_ENDPOINTS.AUTH.LOGOUT);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      // Clear local storage and state regardless of server response\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No authentication token');\r\n      }\r\n\r\n      const response = await axios.put(API_ENDPOINTS.AUTH.USER, userData, {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n\r\n      setUser(response.data);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Update profile error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Failed to update profile'\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    setUser,\r\n    isAuthenticated,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Authenticating...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage message={error} onRetry={checkAuth} />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}